/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Vault, VaultInterface } from "../../contracts/Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_crv",
        type: "address",
      },
      {
        internalType: "address",
        name: "_cvx",
        type: "address",
      },
      {
        internalType: "address",
        name: "_booster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lp",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "crvReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cvxReward",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_REWARD_POOL",
    outputs: [
      {
        internalType: "contract IBaseRewardPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BOOSTER",
    outputs: [
      {
        internalType: "contract IBooster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CRV",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CVX",
    outputs: [
      {
        internalType: "contract ICVX",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LP",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "crvAmountPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cvxAmountPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositAmountTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getPendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "crvPending",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cvxPending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "share",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pending",
                type: "uint256",
              },
            ],
            internalType: "struct Vault.Reward",
            name: "crv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "share",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pending",
                type: "uint256",
              },
            ],
            internalType: "struct Vault.Reward",
            name: "cvx",
            type: "tuple",
          },
        ],
        internalType: "struct Vault.UserInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "share",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pending",
                type: "uint256",
              },
            ],
            internalType: "struct Vault.Reward",
            name: "crv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "share",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pending",
                type: "uint256",
              },
            ],
            internalType: "struct Vault.Reward",
            name: "cvx",
            type: "tuple",
          },
        ],
        internalType: "struct Vault.UserInfo",
        name: "info",
        type: "tuple",
      },
    ],
    name: "getVaultRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "crvPending",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cvxPending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "share",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending",
            type: "uint256",
          },
        ],
        internalType: "struct Vault.Reward",
        name: "crv",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "share",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending",
            type: "uint256",
          },
        ],
        internalType: "struct Vault.Reward",
        name: "cvx",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620022a3380380620022a383398101604081905262000035916200010e565b600160008190556001600160a01b0386811660805285811660a05284811660c081905282546001600160a01b03191691851691909117909155610100829052604051631526fe2760e01b815260048101839052631526fe279060240160c060405180830381865afa158015620000af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d5919062000186565b606001516001600160a01b031660e05250620002409350505050565b80516001600160a01b03811681146200010957600080fd5b919050565b600080600080600060a086880312156200012757600080fd5b6200013286620000f1565b94506200014260208701620000f1565b93506200015260408701620000f1565b92506200016260608701620000f1565b9150608086015190509295509295909350565b805180151581146200010957600080fd5b600060c082840312156200019957600080fd5b60405160c081016001600160401b0381118282101715620001ca57634e487b7160e01b600052604160045260246000fd5b604052620001d883620000f1565b8152620001e860208401620000f1565b6020820152620001fb60408401620000f1565b60408201526200020e60608401620000f1565b60608201526200022160808401620000f1565b60808201526200023460a0840162000175565b60a08201529392505050565b60805160a05160c05160e05161010051611f8b62000318600039600081816101e50152610e2701526000818161019901528181610fd4015281816115a5015261198601526000818161028c01528181610d810152610e5b0152600081816102650152818161063b01528181610938015281816110cf01528181611162015281816111f5015281816115010152818161174a015281816119170152611b380152600081816102db0152818161057c0152818161087901528181611438015281816116580152818161184e0152611a460152611f8b6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806388512c3411610097578063b6fccf8a11610066578063b6fccf8a14610319578063c89b9f0414610339578063ed07f36614610342578063f6ed20171461034b57600080fd5b806388512c34146102ae578063945c9142146102d6578063a3541ea2146102fd578063b6b55f251461030657600080fd5b80635eaec0e4116100d35780635eaec0e4146101e05780636386c1c714610215578063759cb53b1461026057806375b0ffd11461028757600080fd5b80631959a002146101055780632e1a7d4d146101775780634e71d92d1461018c5780635217e30414610194575b600080fd5b61015f610113366004611d05565b6005602090815260009182526040918290208054835180850185526001830154815260028301548185015284518086019095526003830154855260049092015492840192909252909183565b60405161016e93929190611d42565b60405180910390f35b61018a610185366004611d79565b61035e565b005b61018a6107a0565b6101bb7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161016e565b6102077f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161016e565b610228610223366004611d05565b610a06565b60408051825181526020808401518051828401528101518284015292909101518051606083015290910151608082015260a00161016e565b6101bb7f000000000000000000000000000000000000000000000000000000000000000081565b6101bb7f000000000000000000000000000000000000000000000000000000000000000081565b6102c16102bc366004611e08565b610a83565b6040805192835260208301919091520161016e565b6101bb7f000000000000000000000000000000000000000000000000000000000000000081565b61020760035481565b61018a610314366004611d79565b610b34565b6001546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b61020760045481565b61020760025481565b6102c1610359366004611d05565b610f1e565b610366611387565b600081116103d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f5661756c743a20496e76616c696420776974686472617720616d6f756e74000060448201526064015b60405180910390fd5b336000908152600560205260409020805482111561044f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f5661756c743a20496e76616c696420776974686472617720616d6f756e74000060448201526064016103cc565b610458826113fa565b6040805160608101825282548152815180830183526001840154815260028401546020828101919091528083019190915282518084018452600385015481526004850154918101919091529181019190915260009081906104b890610a83565b8454919350915084036104f55733600090815260056020526040812081815560018101829055600281018290556003810182905560040155610530565b838360000160008282546105099190611ec5565b90915550506003805460018501556000600285018190556004805492860192909255908401555b8360025461053e9190611ec5565b6002558115610600576040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044016020604051808303816000875af11580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe9190611ede565b505b80156106bf576040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044016020604051808303816000875af1158015610699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bd9190611ede565b505b6001546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810186905273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb906044016020604051808303816000875af1158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190611ede565b5060405184815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250505061079d6001600055565b50565b6107a8611387565b6107b0611811565b336000908152600560209081526040808320815160608101835281548152825180840184526001830154815260028301548186015281850152825180840184526003830154815260048301549481019490945291820192909252909190819061081890610a83565b600380546001870155600060028701819055600480549288019290925590860155909250905081156108fd576040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044016020604051808303816000875af11580156108d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fb9190611ede565b505b80156109bc576040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044016020604051808303816000875af1158015610996573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ba9190611ede565b505b604080518381526020810183905233917f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7910160405180910390a2505050610a046001600055565b565b610a0e611caf565b5073ffffffffffffffffffffffffffffffffffffffff166000908152600560209081526040918290208251606081018452815481528351808501855260018301548152600283015481850152818401528351808501855260038301548152600490920154928201929092529181019190915290565b6020808201519081015190516003546000911015610ada57602083015151600354670de0b6b3a764000091610ab791611ec5565b8451610ac39190611f00565b610acd9190611f17565b610ad79083611f52565b91505b506040820151602081015190516004541115610b2f57604083015151600454670de0b6b3a764000091610b0c91611ec5565b8451610b189190611f00565b610b229190611f17565b610b2c9082611f52565b90505b915091565b610b3c611387565b60008111610ba6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f5661756c743a20496e76616c6964206465706f73697420616d6f756e7400000060448201526064016103cc565b610bae611811565b336000908152600560205260408120805490918391839190610bd1908490611f52565b909155505060018101546003541115610c325760035460018201819055670de0b6b3a764000090610c029080611ec5565b8254610c0e9190611f00565b610c189190611f17565b600282018054600090610c2c908490611f52565b90915550505b60038101546004541115610c8e5760045460038201819055670de0b6b3a764000090610c5e9080611ec5565b8254610c6a9190611f00565b610c749190611f17565b600482018054600090610c88908490611f52565b90915550505b81600254610c9c9190611f52565b6002556001546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810184905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd906064016020604051808303816000875af1158015610d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d409190611ede565b506001546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590529091169063095ea7b3906044016020604051808303816000875af1158015610dda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfe9190611ede565b506040517f43a0d0660000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000600482015260248101839052600160448201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906343a0d066906064016020604051808303816000875af1158015610eb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edd9190611ede565b5060405182815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a25061079d6001600055565b600080600254600003610f3657506000905080915091565b73ffffffffffffffffffffffffffffffffffffffff83811660009081526005602090815260408083208151606081018352815481528251808401845260018301548152600283015481860152818501528251808401845260038301548152600492830154818601528184015282517e8cc2620000000000000000000000000000000000000000000000000000000081523092810192909252915191947f00000000000000000000000000000000000000000000000000000000000000001692628cc262926024808401938290030181865afa158015611019573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103d9190611f65565b90506000816000036110525750600354611081565b600254611067670de0b6b3a764000084611f00565b6110719190611f17565b60035461107e9190611f52565b90505b602083015151670de0b6b3a76400009061109b9083611ec5565b84516110a79190611f00565b6110b19190611f17565b8360200151602001516110c49190611f52565b9450600082905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611138573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115c9190611f65565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663aa74e6226040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ef9190611f65565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631f96e76f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561125e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112829190611f65565b90506a52b7d2dcc80cd2e4000000600061129c8486611f17565b9050828110156112e85760006112b28285611ec5565b9050836112bf8289611f00565b6112c99190611f17565b965060006112d78785611ec5565b9050808811156112e5578097505b50505b6112f186611bfe565b6000866000036113045750600454611333565b600254611319670de0b6b3a764000089611f00565b6113239190611f17565b6004546113309190611f52565b90505b60408a015151670de0b6b3a76400009061134d9083611ec5565b8b516113599190611f00565b6113639190611f17565b8a60400151602001516113769190611f52565b9a5050505050505050505050915091565b6002600054036113f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103cc565b6002600055565b6002546000036114075750565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015611494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b89190611f65565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156c9190611f65565b6040517fc32e720200000000000000000000000000000000000000000000000000000000815260048101859052600160248201529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063c32e7202906044016020604051808303816000875af1158015611603573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116279190611ede565b506040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015282907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156116b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d89190611f65565b6116e29190611ec5565b9150811561171a576002546116ff670de0b6b3a764000084611f00565b6117099190611f17565b6003546117169190611f52565b6003555b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156117a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ca9190611f65565b6117d49190611ec5565b9050801561180c576002546117f1670de0b6b3a764000083611f00565b6117fb9190611f17565b6004546118089190611f52565b6004555b505050565b60025460000361181d57565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156118aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ce9190611f65565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561195e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119829190611f65565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633d18b9126040518163ffffffff1660e01b81526004016020604051808303816000875af11580156119f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a159190611ede565b506040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015282907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015611aa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac69190611f65565b611ad09190611ec5565b91508115611b0857600254611aed670de0b6b3a764000084611f00565b611af79190611f17565b600354611b049190611f52565b6003555b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015611b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb89190611f65565b611bc29190611ec5565b90508015611bfa57600254611bdf670de0b6b3a764000083611f00565b611be99190611f17565b600454611bf69190611f52565b6004555b5050565b61079d81604051602401611c1491815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff82c50f10000000000000000000000000000000000000000000000000000000017905261079d8160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b604051806060016040528060008152602001611cde604051806040016040528060008152602001600081525090565b8152602001611d00604051806040016040528060008152602001600081525090565b905290565b600060208284031215611d1757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114611d3b57600080fd5b9392505050565b83815260a08101611d60602083018580518252602090810151910152565b8251606083015260208301516080830152949350505050565b600060208284031215611d8b57600080fd5b5035919050565b600060408284031215611da457600080fd5b6040516040810181811067ffffffffffffffff82111715611dee577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b600060a08284031215611e1a57600080fd5b6040516060810181811067ffffffffffffffff82111715611e64577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405282358152611e788460208501611d92565b6020820152611e8a8460608501611d92565b60408201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115611ed857611ed8611e96565b92915050565b600060208284031215611ef057600080fd5b81518015158114611d3b57600080fd5b8082028115828204841417611ed857611ed8611e96565b600082611f4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b80820180821115611ed857611ed8611e96565b600060208284031215611f7757600080fd5b505191905056fea164736f6c6343000815000a";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _crv: PromiseOrValue<string>,
    _cvx: PromiseOrValue<string>,
    _booster: PromiseOrValue<string>,
    _lp: PromiseOrValue<string>,
    _pid: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vault> {
    return super.deploy(
      _crv,
      _cvx,
      _booster,
      _lp,
      _pid,
      overrides || {}
    ) as Promise<Vault>;
  }
  override getDeployTransaction(
    _crv: PromiseOrValue<string>,
    _cvx: PromiseOrValue<string>,
    _booster: PromiseOrValue<string>,
    _lp: PromiseOrValue<string>,
    _pid: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _crv,
      _cvx,
      _booster,
      _lp,
      _pid,
      overrides || {}
    );
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
