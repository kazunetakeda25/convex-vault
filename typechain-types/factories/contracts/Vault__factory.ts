/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Vault, VaultInterface } from "../../contracts/Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_crv",
        type: "address",
      },
      {
        internalType: "address",
        name: "_cvx",
        type: "address",
      },
      {
        internalType: "address",
        name: "_booster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lp",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "crvReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cvxReward",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_REWARD_POOL",
    outputs: [
      {
        internalType: "contract IBaseRewardPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BOOSTER",
    outputs: [
      {
        internalType: "contract IBooster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CRV",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CVX",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LP",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "crvAmountPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cvxAmountPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositAmountTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "share",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pending",
                type: "uint256",
              },
            ],
            internalType: "struct Vault.Reward",
            name: "crv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "share",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pending",
                type: "uint256",
              },
            ],
            internalType: "struct Vault.Reward",
            name: "cvx",
            type: "tuple",
          },
        ],
        internalType: "struct Vault.UserInfo",
        name: "info",
        type: "tuple",
      },
    ],
    name: "getPendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "crvPending",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cvxPending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "share",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pending",
                type: "uint256",
              },
            ],
            internalType: "struct Vault.Reward",
            name: "crv",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "share",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pending",
                type: "uint256",
              },
            ],
            internalType: "struct Vault.Reward",
            name: "cvx",
            type: "tuple",
          },
        ],
        internalType: "struct Vault.UserInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "share",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending",
            type: "uint256",
          },
        ],
        internalType: "struct Vault.Reward",
        name: "crv",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "share",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pending",
            type: "uint256",
          },
        ],
        internalType: "struct Vault.Reward",
        name: "cvx",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162001d4d38038062001d4d83398101604081905262000035916200010c565b60016000556001600160a01b0385811660a052848116608052831660c0819052604051631526fe2760e01b815260048101839052631526fe279060240160c060405180830381865afa15801562000090573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b6919062000184565b606001516001600160a01b0390811660e052600180546001600160a01b031916939091169290921790915561010052506200023e915050565b80516001600160a01b03811681146200010757600080fd5b919050565b600080600080600060a086880312156200012557600080fd5b6200013086620000ef565b94506200014060208701620000ef565b93506200015060408701620000ef565b92506200016060608701620000ef565b9150608086015190509295509295909350565b805180151581146200010757600080fd5b600060c082840312156200019757600080fd5b60405160c081016001600160401b0381118282101715620001c857634e487b7160e01b600052604160045260246000fd5b604052620001d683620000ef565b8152620001e660208401620000ef565b6020820152620001f960408401620000ef565b60408201526200020c60608401620000ef565b60608201526200021f60808401620000ef565b60808201526200023260a0840162000173565b60a08201529392505050565b60805160a05160c05160e05161010051611a53620002fa600039600081816101da0152610d5801526000818161018e0152818161111e01526114ff01526000818161028101528181610cb20152610d8c0152600081816102a80152818161054d0152818161085b0152818161107a015281816111d1015281816113c701526115bf01526000818161025a0152818161060c0152818161091a01528181610fb1015281816112c30152818161149001526116b10152611a536000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806375b0ffd111610097578063b6fccf8a11610066578063b6fccf8a146102e6578063c89b9f0414610306578063d28bba5e1461030f578063ed07f3661461033757600080fd5b806375b0ffd11461027c578063945c9142146102a3578063a3541ea2146102ca578063b6b55f25146102d357600080fd5b80635217e304116100d35780635217e304146101895780635eaec0e4146101d55780636386c1c71461020a578063759cb53b1461025557600080fd5b80631959a002146100fa5780632e1a7d4d1461016c5780634e71d92d14610181575b600080fd5b6101546101083660046117cd565b6005602090815260009182526040918290208054835180850185526001830154815260028301548185015284518086019095526003830154855260049092015492840192909252909183565b6040516101639392919061180a565b60405180910390f35b61017f61017a366004611841565b610340565b005b61017f610782565b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610163565b6101fc7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610163565b61021d6102183660046117cd565b6109e8565b60408051825181526020808401518051828401528101518284015292909101518051606083015290910151608082015260a001610163565b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b6101fc60035481565b61017f6102e1366004611841565b610a65565b6001546101b09073ffffffffffffffffffffffffffffffffffffffff1681565b6101fc60045481565b61032261031d3660046118d0565b610e4f565b60408051928352602083019190915201610163565b6101fc60025481565b610348610f00565b600081116103b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f5661756c743a20496e76616c696420776974686472617720616d6f756e74000060448201526064015b60405180910390fd5b3360009081526005602052604090208054821115610431576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f5661756c743a20496e76616c696420776974686472617720616d6f756e74000060448201526064016103ae565b61043a82610f73565b60408051606081018252825481528151808301835260018401548152600284015460208281019190915280830191909152825180840184526003850154815260048501549181019190915291810191909152600090819061049a90610e4f565b8454919350915084036104d75733600090815260056020526040812081815560018101829055600281018290556003810182905560040155610512565b838360000160008282546104eb919061198d565b90915550506003805460018501556000600285018190556004805492860192909255908401555b81156105d1576040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044016020604051808303816000875af11580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf91906119a6565b505b8015610690576040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044016020604051808303816000875af115801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e91906119a6565b505b8360025461069e919061198d565b6002556001546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810186905273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb906044016020604051808303816000875af1158015610718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073c91906119a6565b5060405184815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250505061077f6001600055565b50565b61078a610f00565b61079261138a565b33600090815260056020908152604080832081516060810183528154815282518084018452600183015481526002830154818601528185015282518084018452600383015481526004830154948101949094529182019290925290919081906107fa90610e4f565b600380546001870155600060028701819055600480549288019290925590860155909250905081156108df576040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044016020604051808303816000875af11580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd91906119a6565b505b801561099e576040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044016020604051808303816000875af1158015610978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099c91906119a6565b505b604080518381526020810183905233917f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7910160405180910390a25050506109e66001600055565b565b6109f0611777565b5073ffffffffffffffffffffffffffffffffffffffff166000908152600560209081526040918290208251606081018452815481528351808501855260018301548152600283015481850152818401528351808501855260038301548152600490920154928201929092529181019190915290565b610a6d610f00565b60008111610ad7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f5661756c743a20496e76616c6964206465706f73697420616d6f756e7400000060448201526064016103ae565b610adf61138a565b336000908152600560205260408120805490918391839190610b029084906119c8565b909155505060018101546003541115610b635760035460018201819055670de0b6b3a764000090610b33908061198d565b8254610b3f91906119db565b610b4991906119f2565b600282018054600090610b5d9084906119c8565b90915550505b60038101546004541115610bbf5760045460038201819055670de0b6b3a764000090610b8f908061198d565b8254610b9b91906119db565b610ba591906119f2565b600482018054600090610bb99084906119c8565b90915550505b81600254610bcd91906119c8565b6002556001546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810184905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd906064016020604051808303816000875af1158015610c4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7191906119a6565b506001546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590529091169063095ea7b3906044016020604051808303816000875af1158015610d0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2f91906119a6565b506040517f43a0d0660000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000600482015260248101839052600160448201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906343a0d066906064016020604051808303816000875af1158015610dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0e91906119a6565b5060405182815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a25061077f6001600055565b6020808201519081015190516003546000911015610ea657602083015151600354670de0b6b3a764000091610e839161198d565b8451610e8f91906119db565b610e9991906119f2565b610ea390836119c8565b91505b506040820151602081015190516004541115610efb57604083015151600454670de0b6b3a764000091610ed89161198d565b8451610ee491906119db565b610eee91906119f2565b610ef890826119c8565b90505b915091565b600260005403610f6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103ae565b6002600055565b600254600003610f805750565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561100d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110319190611a2d565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e59190611a2d565b6040517fc32e720200000000000000000000000000000000000000000000000000000000815260048101859052600160248201529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063c32e7202906044016020604051808303816000875af115801561117c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a091906119a6565b506040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561122d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112519190611a2d565b61125b919061198d565b9050801561129357600254611278670de0b6b3a7640000836119db565b61128291906119f2565b60035461128f91906119c8565b6003555b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015282907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561131f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113439190611a2d565b61134d919061198d565b915081156113855760025461136a670de0b6b3a7640000846119db565b61137491906119f2565b60045461138191906119c8565b6004555b505050565b60025460000361139657565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015611423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114479190611a2d565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156114d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fb9190611a2d565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633d18b9126040518163ffffffff1660e01b81526004016020604051808303816000875af115801561156a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158e91906119a6565b506040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015282907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f9190611a2d565b611649919061198d565b9150811561168157600254611666670de0b6b3a7640000846119db565b61167091906119f2565b60035461167d91906119c8565b6003555b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561170d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117319190611a2d565b61173b919061198d565b9050801561177357600254611758670de0b6b3a7640000836119db565b61176291906119f2565b60045461176f91906119c8565b6004555b5050565b6040518060600160405280600081526020016117a6604051806040016040528060008152602001600081525090565b81526020016117c8604051806040016040528060008152602001600081525090565b905290565b6000602082840312156117df57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461180357600080fd5b9392505050565b83815260a08101611828602083018580518252602090810151910152565b8251606083015260208301516080830152949350505050565b60006020828403121561185357600080fd5b5035919050565b60006040828403121561186c57600080fd5b6040516040810181811067ffffffffffffffff821117156118b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b600060a082840312156118e257600080fd5b6040516060810181811067ffffffffffffffff8211171561192c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405282358152611940846020850161185a565b6020820152611952846060850161185a565b60408201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156119a0576119a061195e565b92915050565b6000602082840312156119b857600080fd5b8151801515811461180357600080fd5b808201808211156119a0576119a061195e565b80820281158282048414176119a0576119a061195e565b600082611a28577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215611a3f57600080fd5b505191905056fea164736f6c6343000815000a";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _crv: PromiseOrValue<string>,
    _cvx: PromiseOrValue<string>,
    _booster: PromiseOrValue<string>,
    _lp: PromiseOrValue<string>,
    _pid: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vault> {
    return super.deploy(
      _crv,
      _cvx,
      _booster,
      _lp,
      _pid,
      overrides || {}
    ) as Promise<Vault>;
  }
  override getDeployTransaction(
    _crv: PromiseOrValue<string>,
    _cvx: PromiseOrValue<string>,
    _booster: PromiseOrValue<string>,
    _lp: PromiseOrValue<string>,
    _pid: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _crv,
      _cvx,
      _booster,
      _lp,
      _pid,
      overrides || {}
    );
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
